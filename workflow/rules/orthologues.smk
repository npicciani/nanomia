from datetime import date
def get_orthofinder_outdir():
    """
    Generate path to orthofinder gene trees folder with current date as written by orthofinder
    """
    today = date.today()
    monthDay = today.strftime("%b%d")
    outdir= f"results/orthofinder/Results_{monthDay}/Gene_Trees"
    return outdir

rule gunzip:
    """
    Decompress (if gzipped) protein files downloaded from public databases.
    """
    input:
        expand("resources/sequences/ensembl/{species}.pep.fasta.gz",species=ensembl_targets.loc[:,"species"]),
        expand("resources/sequences/ensemblgenomes/{species}.pep.fasta.gz",species=ensemblgenomes_targets.loc[:,"species"]),
        expand("resources/sequences/other/{species}.pep.fasta",species=other_targets.loc[:,"species"]),
        expand("resources/sequences/other_gz/{species}.pep.fasta.gz",species=other_gz_targets.loc[:,"species"]),
        expand("resources/sequences/gdrive/{species}.pep.fasta",species=gdrive_targets.loc[:,"species"])
    output:
        expand("resources/sequences/{species}.pep.fasta", species=targets.index)
    params:
        nanomia_proteins="/home/nnp9/scratch60/nanomia/PO_YAL3284_Nanomia_bijuga.protein.fasta",
        physalia_proteins="/home/nnp9/scratch60/nanomia/Physalia_physalis.proteins.fa",
        hormiphora_proteins="/home/nnp9/scratch60/nanomia/Hcv1av93_model_proteins.pep"
    shell:
        """
        dir="resources/sequences"
        gzfiles=`find $dir/* -name '*.gz'`
        for file in $gzfiles; do
            gunzip $file
        done
        fastafiles=`find $dir/* -name '*.fasta'`
        for file in $fastafiles; do
            mv $file $dir
        done
        subdirs=`ls -d $dir/*/`
        rm -R $subdirs

        cp {params.nanomia_proteins} resources/sequences/Nanomia_bijuga.pep.fasta
        cp {params.physalia_proteins} resources/sequences/Physalia_physalis.pep.fasta
        cp {params.hormiphora_proteins} resources/sequences/Hormiphora_californensis.pep.fasta
        """

rule emapper_annotate:
    """
    Generate functional annotations using Eggnog-mapper 2.1.10.
    """
    input:
        "resources/sequences/{species}.pep.fasta",
    output:
        "results/emapper/{species}/{species}.pep.emapper.annotations"
    params:
        outdir="results/emapper/{species}",
        # script="workflow/scripts/annotate_emapper.py",
        emapper_path="$CONDA_PREFIX/bin/emapper.py",
        python_path="$CONDA_PREFIX/bin/python"
    threads: 20
    conda:
        "../../workflow/envs/emapper.yaml" #eggnog-mapper=2.1.10, python=3.7.9
    shell:
        """
        filename={input}
        basename=$(basename "$filename" .fasta)
        python {params.emapper_path} -i {input} -m diamond -o $basename --cpu {threads} --output_dir {params.outdir} --dmnd_ignore_warnings
        """

rule orthofinder:
    """
    Infer gene trees from set of protein sequences downloaded from public databases.
    """
    input:
        expand("resources/sequences/{species}.pep.fasta", species=targets.index)
    output:
        directory(get_orthofinder_outdir())
        # expand("results/orthofinder/Results_{monthDay}/Gene_Trees",monthDay=ORTHODATE)
    conda:
        "../../workflow/envs/orthofinder.yaml"
    threads: 20
    shell:
        """
        rm -rf results/orthofinder
        orthofinder -t {threads} -f resources/sequences -o results/orthofinder
        """

rule append_annotations:
    """
    Append functional annotations to sequence headers in gene trees.
    """
    input:
        gene_trees_folder=get_orthofinder_outdir(),
        # gene_trees_folder=expand("results/orthofinder/Results_{monthDay}/Gene_Trees",monthDay=ORTHODATE),
        annotations=expand("results/emapper/{species}/{species}.pep.emapper.annotations", species=targets.index)
    output:
        "results/annotations/gene_trees.master.annotated.txt"
    params:
        script="workflow/scripts/append_annotations.py"
    conda:
        "../../workflow/envs/append_annotations.yaml" #package ahocorasick 2.0.0 installed
    shell:
        """
        # # Concatenate gene tree text files generated by orthofinder        
        dir={input.gene_trees_folder}
        gene_trees=`find $dir/* -name '*.txt'`
        for file in $gene_trees; do
            (cat "$file"; echo) >> results/annotations/gene_trees.master.txt
        done

        # Concatenate annotation files generated by emapper
        dir="results/emapper/*"
        annotations=`find $dir/* -name '*.annotations'`
        for file in $annotations; do
            (cat "$file"; echo) >> results/annotations/annotations.master.txt
        done
        
        # Run script to append annotations to protein IDs in gene trees
        sed -i '/^#/d' results/annotations/annotations.master.txt #delete lines starting with #
        sed -i '/^$/d' results/annotations/annotations.master.txt #delete empty lines
        python {params.script} results/annotations/annotations.master.txt results/annotations/gene_trees.master.txt results/annotations
        """
